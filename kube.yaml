---
apiVersion: v1
kind: Service
metadata:
  name: dqlite-app-headless
spec:
  selector:
    app: dqlite-app
  clusterIP: None
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
    - name: sql
      protocol: TCP
      port: 9000
      targetPort: sql
---
apiVersion: v1
kind: Service
metadata:
  name: dqlite-app
spec:
  selector:
    app: dqlite-app
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
    - name: sql
      protocol: TCP
      port: 9000
      targetPort: sql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dqlite-app
spec:
  serviceName: dqlite-app-headless
  replicas: 3
  selector:
    matchLabels:
      app: dqlite-app
  # parallel pod strategy is required
  # since the cluster wont boot up without
  # minimum 2 nodes
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: dqlite-app
    spec:
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
      containers:
        - name: dqlite-app
          image: docker.io/bluebrown/dqlite-app
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9000
              name: sql
              protocol: TCP
          env:
            # these environment variables are required
            # for the pod to construct the dns names
            # for the dqlite cluster
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVICE_NAME
              value: dqlite-app-headless
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          # FIXME:
          # probes are disabled because
          # otherwise the nodes cannot connect to each
          # other during initialization which leads
          # to them never becoming ready
          #
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /readyz
          #     port: http
          # startupProbe:
          #   failureThreshold: 30
          #   periodSeconds: 10
          #   httpGet:
          #     path: /readyz
          #     port: http
          #
          volumeMounts:
            - name: data
              mountPath: /opt/app/data
              readOnly: false
            - name: certs
              mountPath: /opt/app/certs
              readOnly: true
      # the certificate is required to be mounted
      # since the app needs tls to use hostnames
      # create the manually certificate before deployment
      volumes:
        - name: certs
          secret:
            secretName: dqlite-app-cluster-cert
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
